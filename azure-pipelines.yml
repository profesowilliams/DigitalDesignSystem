trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop

stages:
  - stage: Test
    displayName: Chromatic Testing
    jobs:
      - job: Chromatic_Deploy_1
        displayName: 'Run Chromatic for Lit'
        steps:
          - checkout: self
            submodules: true
            persistCredentials: true
            displayName: 'Get full Git history including submodules'
            fetchDepth: 0

          - task: NodeTool@0
            inputs:
              versionSpec: '22.x'
            displayName: 'Install Node.js'

          - task: Cache@2
            displayName: Install and cache packages
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: $(Pipeline.Workspace)/.npm-cache # Explicitly set cache directory

          - script: npm config set cache $(Pipeline.Workspace)/.npm-cache --global
            displayName: 'Configure npm cache directory'

          - script: npm ci
            displayName: 'Install dependencies'
            condition: ne(variables.CACHE_RESTORED, 'true')

          # ðŸ‘‡ Run Chromatic for Lit
          - task: CmdLine@2
            displayName: 'Run Chromatic for Lit'
            inputs:
              script: npx chromatic --auto-accept-changes --build-script-name storybook:build:lit
            env:
              CHROMATIC_PROJECT_TOKEN: $(CHROMATIC_PROJECT_TOKEN_1)

      - job: Chromatic_Deploy_2
        displayName: 'Run Chromatic for React'
        steps:
          - checkout: self
            submodules: true
            persistCredentials: true
            displayName: 'Get full Git history including submodules'
            fetchDepth: 0

          - task: NodeTool@0
            inputs:
              versionSpec: '22.x'
            displayName: 'Install Node.js'

          - task: Cache@2
            displayName: Install and cache packages
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: $(npm_config_cache)

          - script: npm ci
            displayName: 'Install dependencies'
            condition: ne(variables.CACHE_RESTORED, 'true')

          # ðŸ‘‡ Run Chromatic for React
          - task: CmdLine@2
            displayName: 'Run Chromatic for React'
            inputs:
              script: npx chromatic --auto-accept-changes --build-script-name storybook:build:react
            env:
              CHROMATIC_PROJECT_TOKEN: $(CHROMATIC_PROJECT_TOKEN_2)

  - stage: Release
    displayName: Semantic Release
    dependsOn: Test
    jobs:
      - job: Semantic_Release
        displayName: 'Run semantic-release with submodules'
        steps:
          - checkout: self
            submodules: true
            persistCredentials: true
            displayName: 'Get full Git history including submodules'

          - task: NodeTool@0
            inputs:
              versionSpec: '22.x'
            displayName: 'Install Node.js'

          - script: npm ci
            displayName: 'Install dependencies'

          - script: |
              #!/bin/bash
              echo "Generating changelog for submodules"
              > SUBMODULE_CHANGELOG.md # Create or reset the submodule changelog file

              # Loop through all submodules and collect changelogs
              for submodule in $(git config --file .gitmodules --get-regexp path | awk '{ print $2 }'); do
                echo "## Changes in $submodule" >> SUBMODULE_CHANGELOG.md
                git -C $submodule log --oneline --since="last week" >> SUBMODULE_CHANGELOG.md
                echo "" >> SUBMODULE_CHANGELOG.md
              done

              # Append the submodule changelog to the main changelog
              cat SUBMODULE_CHANGELOG.md >> CHANGELOG.md
            displayName: 'Generate changelog for submodules'

          - script: npx semantic-release --no-ci
            displayName: 'Run semantic-release'
