trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop

stages:
  - stage: Test
    displayName: Chromatic Testing
    jobs:
      - job: Chromatic_Deploy_1
        displayName: 'Run Chromatic for Lit'
        steps:
          - checkout: self
            submodules: true
            persistCredentials: true
            displayName: 'Get full Git history'
            fetchDepth: 0

          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - task: Cache@2
            displayName: Install and cache packages
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: $(Pipeline.Workspace)/.npm-cache # Explicitly set cache directory

          - script: npm config set cache $(Pipeline.Workspace)/.npm-cache --global
            displayName: 'Configure npm cache directory'

          - script: npm ci
            displayName: 'Install dependencies'
            condition: ne(variables.CACHE_RESTORED, 'true')

          # ðŸ‘‡ Run Chromatic for Lit
          - task: CmdLine@2
            displayName: 'Run Chromatic for Lit'
            inputs:
              script: npx chromatic --auto-accept-changes --build-script-name storybook:build:lit
            env:
              CHROMATIC_PROJECT_TOKEN: $(CHROMATIC_PROJECT_TOKEN_1)

      - job: Chromatic_Deploy_2
        displayName: 'Run Chromatic for React'
        steps:
          - checkout: self
            submodules: true
            persistCredentials: true
            displayName: 'Get full Git history'
            fetchDepth: 0

          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - task: Cache@2
            displayName: Install and cache packages
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: $(npm_config_cache)

          - script: npm ci
            displayName: 'Install dependencies'
            condition: ne(variables.CACHE_RESTORED, 'true')

          # ðŸ‘‡ Run Chromatic for React
          - task: CmdLine@2
            displayName: 'Run Chromatic for React'
            inputs:
              script: npx chromatic --auto-accept-changes --build-script-name storybook:build:react
            env:
              CHROMATIC_PROJECT_TOKEN: $(CHROMATIC_PROJECT_TOKEN_2)
